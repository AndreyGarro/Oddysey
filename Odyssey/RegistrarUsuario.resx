<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAA=
</value>
  </data>
</root>